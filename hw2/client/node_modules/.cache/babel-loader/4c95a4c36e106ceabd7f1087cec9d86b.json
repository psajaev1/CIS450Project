{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phillip\\\\cis450\\\\450git\\\\hw2\\\\client\\\\src\\\\components\\\\PennStudents.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport RecommendationsRow from './RecommendationsRow';\nimport '../style/Recommendations.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BaseTable, { Column } from 'react-base-table';\nimport 'react-base-table/styles.css';\nexport default class PennStudents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      key: 'City',\n      title: 'Destination City',\n      dataKey: 'City',\n      width: 600,\n      resizable: true,\n      sortable: true,\n      frozen: Column.Alignment.CENTER\n    }, {\n      key: 'Country',\n      title: 'Destination Country',\n      dataKey: 'Country',\n      width: 600,\n      align: Column.Alignment.CENTER,\n      sortable: false\n    }]; // State maintained by this React component is the selected movie name,\n    // and the list of recommended movies.\n\n    this.state = {\n      covidDeaths: 1000000,\n      popDensity: 0,\n      recMovies: []\n    };\n    this.handleCovidDeathChange = this.handleCovidDeathChange.bind(this);\n    this.handlePopDensityChange = this.handlePopDensityChange.bind(this);\n    this.pennStudents = this.pennStudents.bind(this);\n  }\n\n  handleCovidDeathChange(e) {\n    this.setState({\n      covidDeaths: e.target.value\n    });\n  }\n\n  handlePopDensityChange(e) {\n    this.setState({\n      popDensity: e.target.value\n    });\n  }\n  /* ---- Q2 (Recommendations) ---- */\n  // Hint: Name of movie submitted is contained in `this.state.movieName`.\n\n\n  pennStudents() {\n    var pDens = this.state.popDensity;\n    fetch(\"http://localhost:8081/PennStudents/\" + pDens, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(movieList => {\n      if (!movieList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      // let movieDivs = movieList.map((movieObj, i) =>\n      //    <RecommendationsRow airport={movieObj.City} city={movieObj.Country}/>\n      // ); \n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        recMovies: movieList\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Recommendations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"PennStudents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container recommendations-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, \"Nonstop Philadelphia Flight Destinations for Penn Students\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Lower limit GDP Density\",\n      onChange: this.handlePopDensityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submitMovieBtn\",\n      className: \"submit-btn\",\n      onClick: this.pennStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Here are possible nonstop Destinations \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(BaseTable, {\n      columns: this.columns,\n      data: this.state.recMovies,\n      width: 1050,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Phillip/cis450/450git/hw2/client/src/components/PennStudents.js"],"names":["React","PageNavbar","RecommendationsRow","BaseTable","Column","PennStudents","Component","constructor","props","columns","key","title","dataKey","width","resizable","sortable","frozen","Alignment","CENTER","align","state","covidDeaths","popDensity","recMovies","handleCovidDeathChange","bind","handlePopDensityChange","pennStudents","e","setState","target","value","pDens","fetch","method","then","res","json","movieList","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PageNavbar from './PageNavbar';\r\nimport RecommendationsRow from './RecommendationsRow';\r\nimport '../style/Recommendations.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport BaseTable, { Column } from 'react-base-table'\r\nimport 'react-base-table/styles.css'\r\n\r\n\r\n\r\nexport default class PennStudents extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\r\n\r\n\t\tthis.columns = [\r\n\t\t\t{\r\n\t\t\t  key: 'City',\r\n\t\t\t  title: 'Destination City',\r\n\t\t\t  dataKey: 'City',\r\n\t\t\t  width: 600,\r\n\t\t\t  resizable: true,\r\n\t\t\t  sortable: true,\r\n\t\t\t  frozen: Column.Alignment.CENTER,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t  key: 'Country',\r\n\t\t\t  title: 'Destination Country',\r\n\t\t\t  dataKey: 'Country',\r\n\t\t\t  width: 600,\r\n\t\t\t  align: Column.Alignment.CENTER,\r\n\t\t\t  sortable: false,\r\n\t\t\t}\r\n\t\t  ]\r\n\r\n\t\t// State maintained by this React component is the selected movie name,\r\n\t\t// and the list of recommended movies.\r\n\t\tthis.state = {\r\n\t\t\tcovidDeaths : 1000000,\r\n\t\t\tpopDensity : 0,\r\n\t\t\trecMovies: []\r\n\t\t}\r\n\r\n\t\tthis.handleCovidDeathChange = this.handleCovidDeathChange.bind(this);\r\n\t\tthis.handlePopDensityChange = this.handlePopDensityChange.bind(this);\r\n\t\tthis.pennStudents = this.pennStudents.bind(this);\r\n\t}\r\n\r\n\thandleCovidDeathChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tcovidDeaths: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandlePopDensityChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tpopDensity: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\t/* ---- Q2 (Recommendations) ---- */\r\n\t// Hint: Name of movie submitted is contained in `this.state.movieName`.\r\n\tpennStudents() {\r\n\t\t\r\n\tvar pDens = this.state.popDensity;\r\n\r\n\tfetch(\"http://localhost:8081/PennStudents/\" + pDens, {\r\n      method: 'GET' // The type of HTTP request.\r\n    })\r\n      .then(res => res.json()) // Convert the response data to a JSON.\r\n      .then(movieList => {\r\n        if (!movieList) return;\r\n        // Map each genreObj in genreList to an HTML element:\r\n        // A button which triggers the showMovies function for each genre.\r\n\r\n        // let movieDivs = movieList.map((movieObj, i) =>\r\n        //    <RecommendationsRow airport={movieObj.City} city={movieObj.Country}/>\r\n        // ); \r\n\r\n\r\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\r\n        this.setState({\r\n          recMovies: movieList\r\n        })\r\n      })\r\n      .catch(err => console.log(err)) // Print the error if there is one.\r\n  }\r\n\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Recommendations\">\r\n\t\t\t\t<PageNavbar active=\"PennStudents\" />\r\n\r\n\t\t\t    <div className=\"container recommendations-container\">\r\n\t\t\t    \t<div className=\"jumbotron\">\r\n\t\t\t    \t\t<div className=\"h5\">Nonstop Philadelphia Flight Destinations for Penn Students</div>\r\n\t\t\t    \t\t<br></br>\r\n\t\t\t    \t\t<div className=\"input-container\">\r\n\t\t\t    \t\t</div>\r\n\t\t\t\t\t\t<input type='number' placeholder=\"Lower limit GDP Density\" onChange={this.handlePopDensityChange} />\r\n\t\t\t\t\t\t<div className=\"submit-container\">\r\n\t\t\t\t\t\t<button id=\"submitMovieBtn\" className=\"submit-btn\" onClick={this.pennStudents}>Submit</button>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t    \t\t<div className=\"header-container\">\r\n\t\t\t    \t\t\t<div className=\"h6\">Here are possible nonstop Destinations </div>\r\n\t\t\t    \t\t\t<div className=\"headers\">\r\n\t\t\t    \t\t\t</div>\r\n\t\t\t    \t\t</div>\r\n\t\t\t    \t\t{/* <div className=\"results-container\" id=\"results\">\r\n\t\t\t    \t\t\t{this.state.recMovies}\r\n\t\t\t    \t\t</div> */}\r\n\t\t\t\t\t\t<BaseTable columns={this.columns} data={this.state.recMovies} width={1050} height={400}>\r\n\r\n\t\t\t\t\t\t</BaseTable>\r\n\t\t\t    \t</div>\r\n\t\t\t    </div>\r\n\t\t    </div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}